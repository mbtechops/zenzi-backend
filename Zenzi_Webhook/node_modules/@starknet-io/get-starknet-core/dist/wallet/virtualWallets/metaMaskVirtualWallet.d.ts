import { VirtualWallet } from "../../types";
import { RpcMessage, StarknetWindowObject } from "@starknet-io/types-js";
import { Mutex } from "async-mutex";
interface MetaMaskProvider {
    isMetaMask: boolean;
    request(options: {
        method: string;
    }): Promise<void>;
}
export declare type Eip6963SupportedWallet = {
    provider: MetaMaskProvider | null;
};
export declare type EmptyVirtualWallet = {
    swo: StarknetWindowObject | null;
    on(): void;
    off(): void;
    request<Data extends RpcMessage>(call: Omit<Data, "result">): Promise<Data["result"]>;
};
declare class MetaMaskVirtualWallet implements VirtualWallet, Eip6963SupportedWallet, EmptyVirtualWallet {
    #private;
    id: string;
    name: string;
    icon: string;
    windowKey: string;
    provider: MetaMaskProvider | null;
    swo: StarknetWindowObject | null;
    lock: Mutex;
    constructor();
    loadWallet(windowObject: Record<string, unknown>): Promise<StarknetWindowObject>;
    hasSupport(windowObject: Record<string, unknown>): Promise<boolean>;
    request<Data extends RpcMessage>(arg: Omit<Data, "result">): Promise<Data["result"]>;
    on(): void;
    off(): void;
}
declare const metaMaskVirtualWallet: MetaMaskVirtualWallet;
export { metaMaskVirtualWallet };
